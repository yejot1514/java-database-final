package com.project.code.Model;

public class Review {

// 1. Add 'customerId' field:
//    - Type: private Long
//    - This field represents the customer who created the review.
//    - This field cannot be empty, use the @NotNull annotation to enforce this rule.

// 2. Add 'productId' field:
//    - Type: private Long
//    - This field represents the product being reviewed.
//    - This field cannot be empty, use the @NotNull annotation to enforce this rule.

// 3. Add 'storeId' field:
//    - Type: private Long
//    - This field represents the store associated with the product.
//    - This field cannot be empty, use the @NotNull annotation to enforce this rule.

// 4. Add 'rating' field:
//    - Type: private Integer
//    - This field represents the rating given to the product (out of 5).
//    - This field cannot be empty, use the @NotNull annotation to enforce this rule.

// 5. Add 'comment' field:
//    - Type: private String
//    - This field represents an optional comment on the product.

// 6. Add validation:
//    - Apply @NotNull to the customerId, productId, storeId, and rating fields to ensure they are not null.
//    - Example: @NotNull(message = "Customer cannot be null")

// 7. Add @Document annotation:
//    - Use @Document(collection = "reviews") to indicate that this class represents a MongoDB document.

// 8. Add constructor:
//    - The constructor should accept values for customerId, productId, storeId, rating, and an optional comment.

// 9. Add @Id annotation:
//    - Use @Id to mark the field 'id' as the primary key for MongoDB.
//    - The 'id' field is of type String and will be automatically generated by MongoDB.

// 10. Add Getters and Setters:
//    - Add getter and setter methods for all fields (customerId, productId, storeId, rating, comment).
  

}
